plugins {
    id "java"
    id "idea"
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id "net.minecraftforge.gradle.forge"
    id "org.spongepowered.mixin"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url = "https://jitpack.io/" }
}

version = "plus"
group = "net.ccbluex"
archivesBaseName = "LiquidBounce"

sourceCompatibility = targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = true
    clientJvmArgs += ["-Dfml.coreMods.load=net.ccbluex.liquidbounce.injection.forge.TransformerLoader"]
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    include("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
    }

    include "org.yaml:snakeyaml:1.29"

    implementation('com.github.half-cambodian-hacker-man:Koffee:d8cee73') {
        exclude module: 'asm-commons'
        exclude module: 'asm-tree'
        exclude module: 'asm'
    }

    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")

    compile 'com.jagrosh:DiscordIPC:0.4'
    include "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'com.github.TheAltening:TheAltening4j:master-SNAPSHOT'
    implementation 'com.github.TheAltening:TheAlteningAuth4j:-SNAPSHOT'
    compile 'com.github.TheAltening:TheAltening4j:api-2.0-SNAPSHOT'
    compile 'com.github.TheAltening:TheAlteningAuth4j:-SNAPSHOT'

    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.0'
    compile 'com.github.ben-manes.caffeine:caffeine:2.9.0'

    include fileTree(include: ["*.jar"], dir: "libs")
}

shadowJar {
    archiveClassifier.set("")
    dependencies {
        include(dependency('org.spongepowered:mixin'))
        include(dependency('com.jagrosh:DiscordIPC'))
        include(dependency('org.json:json'))
        include(dependency('org.slf4j:slf4j-api'))
        include(dependency('log4j:log4j:1.2.17'))
        include(dependency('org.scijava:native-lib-loader'))
        include(dependency('com.kohlschutter.junixsocket:junixsocket-common'))
        include(dependency('com.kohlschutter.junixsocket:junixsocket-native-common'))

        include(dependency('org.yaml:snakeyaml'))
        include(dependency('org.jetbrains.kotlin:kotlin-stdlib'))

        include(dependency('com.github.TheAltening:TheAltening4j'))
        include(dependency('com.github.TheAltening:TheAlteningAuth4j'))
        include(dependency('com.github.ben-manes.caffeine:caffeine'))

        include(dependency('com.github.half-cambodian-hacker-man:Koffee'))
    }

    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.txt"

    exclude "com/sun/jna/**"

    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename "(.+_at.cfg)", "META-INF/\$1"
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn(processResources)
classes.dependsOn(moveResources)

jar {
    manifest.attributes(
            "FMLCorePlugin": "net.ccbluex.liquidbounce.injection.forge.TransformerLoader",
            "FMLCorePluginContainsFMLMod": "net.ccbluex.liquidbounce.injection.forge.MixinLoader",
            "MixinConfigs": "liquidbounce.forge.mixins.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0",
            "FMLAT": "liquidbounce_at.cfg",
    )

    enabled = false
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "liquidbounce.mixins.refmap.json"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
    }
}

configurations {
    external
    compile.extendsFrom(external)
}

tasks.reobfShadowJar.mustRunAfter shadowJar

tasks.reobfJar.dependsOn(shadowJar)